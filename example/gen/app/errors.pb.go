// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: app/errors.proto

package app

import (
	_ "example.com/test/gen/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ApplicationError is a top-level error. It can be one of multiple types of errors.
type ApplicationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ApplicationError_Config
	//	*ApplicationError_Io
	//	*ApplicationError_Other
	Kind          isApplicationError_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationError) Reset() {
	*x = ApplicationError{}
	mi := &file_app_errors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationError) ProtoMessage() {}

func (x *ApplicationError) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationError.ProtoReflect.Descriptor instead.
func (*ApplicationError) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationError) GetKind() isApplicationError_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ApplicationError) GetConfig() *ConfigError {
	if x != nil {
		if x, ok := x.Kind.(*ApplicationError_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *ApplicationError) GetIo() *IOError {
	if x != nil {
		if x, ok := x.Kind.(*ApplicationError_Io); ok {
			return x.Io
		}
	}
	return nil
}

func (x *ApplicationError) GetOther() *OtherError {
	if x != nil {
		if x, ok := x.Kind.(*ApplicationError_Other); ok {
			return x.Other
		}
	}
	return nil
}

type isApplicationError_Kind interface {
	isApplicationError_Kind()
}

type ApplicationError_Config struct {
	// A configuration error.
	Config *ConfigError `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type ApplicationError_Io struct {
	// An I/O error.
	Io *IOError `protobuf:"bytes,2,opt,name=io,proto3,oneof"`
}

type ApplicationError_Other struct {
	// Any other type of error (perfect for internal server errors).
	Other *OtherError `protobuf:"bytes,3,opt,name=other,proto3,oneof"`
}

func (*ApplicationError_Config) isApplicationError_Kind() {}

func (*ApplicationError_Io) isApplicationError_Kind() {}

func (*ApplicationError_Other) isApplicationError_Kind() {}

type ConfigError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// These two fields will be displayed in the error message.
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// This field will not be displayed in the error message, but it can be unwrapped and introspected.
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigError) Reset() {
	*x = ConfigError{}
	mi := &file_app_errors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigError) ProtoMessage() {}

func (x *ConfigError) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigError.ProtoReflect.Descriptor instead.
func (*ConfigError) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigError) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConfigError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IOError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Path  string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Embedded error types can be unwrapped with Unwrap().
	Cause         *NotFoundError `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOError) Reset() {
	*x = IOError{}
	mi := &file_app_errors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOError) ProtoMessage() {}

func (x *IOError) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOError.ProtoReflect.Descriptor instead.
func (*IOError) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{2}
}

func (x *IOError) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *IOError) GetCause() *NotFoundError {
	if x != nil {
		return x.Cause
	}
	return nil
}

type NotFoundError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        string                 `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotFoundError) Reset() {
	*x = NotFoundError{}
	mi := &file_app_errors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotFoundError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotFoundError) ProtoMessage() {}

func (x *NotFoundError) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotFoundError.ProtoReflect.Descriptor instead.
func (*NotFoundError) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{3}
}

func (x *NotFoundError) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

type OtherError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OtherError) Reset() {
	*x = OtherError{}
	mi := &file_app_errors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OtherError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherError) ProtoMessage() {}

func (x *OtherError) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherError.ProtoReflect.Descriptor instead.
func (*OtherError) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{4}
}

func (x *OtherError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Code generation should not touch this message since it is not an error message (i.e, doesn't end with "Error").
type NormalMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NormalMessage) Reset() {
	*x = NormalMessage{}
	mi := &file_app_errors_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NormalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalMessage) ProtoMessage() {}

func (x *NormalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_app_errors_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalMessage.ProtoReflect.Descriptor instead.
func (*NormalMessage) Descriptor() ([]byte, []int) {
	return file_app_errors_proto_rawDescGZIP(), []int{5}
}

func (x *NormalMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_app_errors_proto protoreflect.FileDescriptor

const file_app_errors_proto_rawDesc = "" +
	"\n" +
	"\x10app/errors.proto\x12\x04test\x1a\x14errors/options.proto\"\x92\x01\n" +
	"\x10ApplicationError\x12+\n" +
	"\x06config\x18\x01 \x01(\v2\x11.test.ConfigErrorH\x00R\x06config\x12\x1f\n" +
	"\x02io\x18\x02 \x01(\v2\r.test.IOErrorH\x00R\x02io\x12(\n" +
	"\x05other\x18\x03 \x01(\v2\x10.test.OtherErrorH\x00R\x05otherB\x06\n" +
	"\x04kind\"r\n" +
	"\vConfigError\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage:!\x92\x82\x19\x1dinvalid config: {key}={value}\"l\n" +
	"\aIOError\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12)\n" +
	"\x05cause\x18\x02 \x01(\v2\x13.test.NotFoundErrorR\x05cause:\"\x92\x82\x19\x1ecould not read {path}: {cause}\"@\n" +
	"\rNotFoundError\x12\x16\n" +
	"\x06entity\x18\x01 \x01(\tR\x06entity:\x17\x92\x82\x19\x13not found: {entity}\"5\n" +
	"\n" +
	"OtherError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage:\r\x92\x82\x19\t{message}\"#\n" +
	"\rNormalMessage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04nameB\x1aZ\x18example.com/test/gen/appb\x06proto3"

var (
	file_app_errors_proto_rawDescOnce sync.Once
	file_app_errors_proto_rawDescData []byte
)

func file_app_errors_proto_rawDescGZIP() []byte {
	file_app_errors_proto_rawDescOnce.Do(func() {
		file_app_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_errors_proto_rawDesc), len(file_app_errors_proto_rawDesc)))
	})
	return file_app_errors_proto_rawDescData
}

var file_app_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_app_errors_proto_goTypes = []any{
	(*ApplicationError)(nil), // 0: test.ApplicationError
	(*ConfigError)(nil),      // 1: test.ConfigError
	(*IOError)(nil),          // 2: test.IOError
	(*NotFoundError)(nil),    // 3: test.NotFoundError
	(*OtherError)(nil),       // 4: test.OtherError
	(*NormalMessage)(nil),    // 5: test.NormalMessage
}
var file_app_errors_proto_depIdxs = []int32{
	1, // 0: test.ApplicationError.config:type_name -> test.ConfigError
	2, // 1: test.ApplicationError.io:type_name -> test.IOError
	4, // 2: test.ApplicationError.other:type_name -> test.OtherError
	3, // 3: test.IOError.cause:type_name -> test.NotFoundError
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_app_errors_proto_init() }
func file_app_errors_proto_init() {
	if File_app_errors_proto != nil {
		return
	}
	file_app_errors_proto_msgTypes[0].OneofWrappers = []any{
		(*ApplicationError_Config)(nil),
		(*ApplicationError_Io)(nil),
		(*ApplicationError_Other)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_errors_proto_rawDesc), len(file_app_errors_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_errors_proto_goTypes,
		DependencyIndexes: file_app_errors_proto_depIdxs,
		MessageInfos:      file_app_errors_proto_msgTypes,
	}.Build()
	File_app_errors_proto = out.File
	file_app_errors_proto_goTypes = nil
	file_app_errors_proto_depIdxs = nil
}
